<idea-plugin>
    <id>org.jetbrains.compose.desktop.ide</id>
    <name>Compose Multiplatform IDE Support</name>
    <vendor>JetBrains</vendor>
    <description>
        <![CDATA[
        IDE support for developing
        <a href="https://www.jetbrains.com/lp/compose/">Compose for Desktop</a>
        applications.
        ]]>

    </description>

    <!-- Product and plugin compatibility requirements -->
    <!-- https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.java</depends>
    <depends>com.intellij.gradle</depends>
    <depends>org.jetbrains.kotlin</depends>

    <extensions defaultExtensionNs="org.jetbrains.kotlin">
        <storageComponentContainerContributor implementation="androidx.compose.compiler.plugins.kotlin.ComposableCallChecker"/>
        <storageComponentContainerContributor implementation="androidx.compose.compiler.plugins.kotlin.ComposableDeclarationChecker"/>
        <diagnosticSuppressor implementation="androidx.compose.compiler.plugins.kotlin.ComposeDiagnosticSuppressor"/>
        <quickFixContributor implementation="com.android.tools.compose.intentions.ComposeDelegateStateImportFixContributor"/>
        <quickFixContributor implementation="com.android.tools.compose.intentions.ComposeUnresolvedFunctionFixContributor"/>
        <additionalExtractableAnalyser implementation="com.android.tools.compose.ComposableFunctionExtractableAnalyser"/>
        <irGenerationExtension implementation="com.android.tools.compose.ComposePluginIrGenerationExtension"/>
        <highlighterExtension implementation="com.android.tools.compose.ComposableHighlighter"/>
    </extensions>

    <extensions defaultExtensionNs="org.jetbrains.kotlin.extensions.internal">
        <typeResolutionInterceptorExtension implementation="com.android.tools.compose.ComposePluginTypeResolutionInterceptorExtension"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <projectService serviceInterface="org.jetbrains.kotlin.idea.kdoc.KDocLinkResolutionService"
                        serviceImplementation="com.android.tools.compose.ComposeKDocLinkResolutionService"
                        overrides="true"
        />

        <dependencySupport coordinate="androidx.compose.runtime:runtime" kind="java" displayName="Jetpack Compose"/>
        
        <additionalTextAttributes scheme="Default" file="colorschemes/IdeComposableAnnotatorColorSchemeDefault.xml"/>
        <colorSettingsPage implementation="com.android.tools.compose.ComposeColorSettingsPage"/>

        <intentionAction>
            <className>com.android.tools.compose.intentions.ComposeSurroundWithWidgetActionGroup</className>
            <category>Compose Desktop</category>
        </intentionAction>

        <intentionAction>
            <className>com.android.tools.compose.intentions.ComposeCreatePreviewAction</className>
            <category>Compose Desktop</category>
        </intentionAction>

        <intentionAction>
            <className>com.android.tools.compose.intentions.ComposeUnwrapAction</className>
            <category>Compose Desktop</category>
        </intentionAction>

        <intentionAction>
            <className>com.android.tools.compose.intentions.ComposeWrapModifiersAction</className>
            <category>Compose Desktop</category>
        </intentionAction>

        <lang.foldingBuilder language="kotlin" implementationClass="com.android.tools.compose.ComposeFoldingBuilder"/>

        <codeCompletionConfigurable instance="com.android.tools.compose.ComposeCodeCompletionConfigurable"/>
        <codeStyleSettingsProvider implementation="com.android.tools.compose.settings.ComposeFormattingCodeStyleSettingsProvider"/>

        <completion.contributor language="kotlin"
                                id="ComposeCompletionContributor"
                                implementationClass="com.android.tools.compose.code.completion.ComposeCompletionContributor"
                                order="first, before KotlinCompletionContributor"/>

        <completion.contributor language="kotlin"
                                id="ComposeAlignmentCompletionContributor"
                                implementationClass="com.android.tools.compose.code.completion.ComposeImplementationsCompletionContributor"
                                order="first, before KotlinCompletionContributor"/>

        <completion.contributor language="kotlin"
                                implementationClass="com.android.tools.compose.code.completion.ComposeModifierCompletionContributor"
                                order="first, before ComposeCompletionContributor"/>
        <completion.contributor language="JSON"
                                id="MotionSceneCompletionContributor"
                                implementationClass="com.android.tools.compose.code.completion.constraintlayout.ConstraintLayoutJsonCompletionContributor"
                                order="first, before JsonCompletionContributor"/>

        <weigher key="completion"
                 implementationClass="com.android.tools.compose.code.completion.ComposeCompletionWeigher"
                 id="android.compose"
                 order="first"/>

        <lang.inspectionSuppressor language="kotlin" implementationClass="com.android.tools.compose.ComposeSuppressor"/>

        <postFormatProcessor implementation="com.android.tools.compose.formatting.ComposePostFormatProcessor"/>

        <automaticRenamerFactory implementation="com.android.tools.compose.ComposableElementAutomaticRenamerFactory"/>

        <debugger.positionManagerFactory implementation="com.android.tools.compose.debug.ComposePositionManagerFactory"/>
        <debuggerClassFilterProvider implementation="com.android.tools.compose.debug.ComposeDebuggerClassesFilterProvider"/>
        <xdebugger.settings implementation="com.android.tools.compose.debug.ComposeDebuggerSettings"/>
        <debugger.compoundRendererProvider id="SnapshotMutableStateImplRenderer"
                                           implementation="com.android.tools.compose.debug.render.SnapshotMutableStateImplRendererProvider"
                                           order="first"/>

        <debugger.compoundRendererProvider id="DerivedSnapshotStateRenderer"
                                           implementation="com.android.tools.compose.debug.render.DerivedSnapshotStateRendererProvider"
                                           order="first"/>

        <debugger.compoundRendererProvider id="ComposeStateObjectListRenderer"
                                           implementation="com.android.tools.compose.debug.render.ComposeStateObjectListRendererProvider"
                                           order="first"/>

        <debugger.compoundRendererProvider id="ComposeStateObjectMapRenderer"
                                           implementation="com.android.tools.compose.debug.render.ComposeStateObjectMapRendererProvider"
                                           order="first"/>

        <debugger.compoundRendererProvider id="KotlinMapEntryRenderer"
                                           implementation="com.android.tools.compose.debug.render.KotlinMapEntryRenderer"
                                           order="first"/>
        
        <runLineMarkerContributor
                language="kotlin"
                implementationClass="org.jetbrains.compose.desktop.ide.preview.PreviewRunLineMarkerContributor"/>
        <deadCode implementation="org.jetbrains.compose.desktop.ide.preview.PreviewEntryPoint" />

        <runLineMarkerContributor
                language="kotlin"
                implementationClass="org.jetbrains.compose.web.ide.run.WebRunLineMarkerContributor"/>
        <runConfigurationProducer
                implementation="org.jetbrains.compose.web.ide.run.WebRunConfigurationProducer"/>

        <toolWindow
                factoryClass="org.jetbrains.compose.desktop.ide.preview.PreviewToolWindow"
                id="Desktop Preview" doNotActivateOnStart="true"
                anchor="right" />
        
        <notificationGroup id="Compose MPP Notifications" displayType="BALLOON"/>

        <editorFloatingToolbarProvider implementation="org.jetbrains.compose.desktop.ide.preview.PreviewFloatingToolbarProvider"/>
    </extensions>

    <actions>
        <group id="Compose.Desktop.Preview.Editor.Toolbar">
            <action class="org.jetbrains.compose.desktop.ide.preview.RefreshOrRunPreviewAction"/>
        </group>
    </actions>
</idea-plugin>
